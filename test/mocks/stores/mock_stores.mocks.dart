// Mocks generated by Mockito 5.0.17 from annotations
// in treinamento_get_it/test/mocks/stores/mock_stores.dart.
// Do not manually edit this file.

import 'package:mobx/mobx.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:treinamento_get_it/models/entities/post.dart' as _i4;
import 'package:treinamento_get_it/pages/post/post_list/store/post_list_store.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeObservableList_0<T> extends _i1.Fake
    implements _i2.ObservableList<T> {}

/// A class which mocks [PostListStore].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostListStore extends _i1.Mock implements _i3.PostListStore {
  MockPostListStore() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ObservableList<_i4.Post> get posts =>
      (super.noSuchMethod(Invocation.getter(#posts),
              returnValue: _FakeObservableList_0<_i4.Post>())
          as _i2.ObservableList<_i4.Post>);
  @override
  set posts(_i2.ObservableList<_i4.Post>? _posts) =>
      super.noSuchMethod(Invocation.setter(#posts, _posts),
          returnValueForMissingStub: null);
  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);
  @override
  set isLoading(bool? _isLoading) =>
      super.noSuchMethod(Invocation.setter(#isLoading, _isLoading),
          returnValueForMissingStub: null);
  @override
  set error(String? _error) =>
      super.noSuchMethod(Invocation.setter(#error, _error),
          returnValueForMissingStub: null);
  @override
  void setPosts(List<_i4.Post>? value) =>
      super.noSuchMethod(Invocation.method(#setPosts, [value]),
          returnValueForMissingStub: null);
  @override
  void clearPosts() => super.noSuchMethod(Invocation.method(#clearPosts, []),
      returnValueForMissingStub: null);
  @override
  void setLoading(bool? value) =>
      super.noSuchMethod(Invocation.method(#setLoading, [value]),
          returnValueForMissingStub: null);
  @override
  void setError(String? value) =>
      super.noSuchMethod(Invocation.method(#setError, [value]),
          returnValueForMissingStub: null);
  @override
  void clearError() => super.noSuchMethod(Invocation.method(#clearError, []),
      returnValueForMissingStub: null);
}
