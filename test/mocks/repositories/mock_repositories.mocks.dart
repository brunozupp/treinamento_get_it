// Mocks generated by Mockito 5.0.17 from annotations
// in treinamento_get_it/test/mocks/repositories/mock_repositories.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:treinamento_get_it/models/entities/post.dart' as _i2;
import 'package:treinamento_get_it/models/entities/user.dart' as _i3;
import 'package:treinamento_get_it/repositories/post_repository.dart' as _i4;
import 'package:treinamento_get_it/repositories/user_repository.dart' as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePost_0 extends _i1.Fake implements _i2.Post {}

class _FakeUser_1 extends _i1.Fake implements _i3.User {}

/// A class which mocks [PostRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRepository extends _i1.Mock implements _i4.PostRepository {
  MockPostRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<List<_i2.Post>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i2.Post>>.value(<_i2.Post>[]))
          as _i5.Future<List<_i2.Post>>);
  @override
  _i5.Future<bool> delete(int? id) =>
      (super.noSuchMethod(Invocation.method(#delete, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<_i2.Post> insert(_i2.Post? post) =>
      (super.noSuchMethod(Invocation.method(#insert, [post]),
              returnValue: Future<_i2.Post>.value(_FakePost_0()))
          as _i5.Future<_i2.Post>);
  @override
  _i5.Future<_i2.Post> update(_i2.Post? post) =>
      (super.noSuchMethod(Invocation.method(#update, [post]),
              returnValue: Future<_i2.Post>.value(_FakePost_0()))
          as _i5.Future<_i2.Post>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i6.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<bool> delete(int? id) =>
      (super.noSuchMethod(Invocation.method(#delete, [id]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<List<_i3.User>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future<List<_i3.User>>.value(<_i3.User>[]))
          as _i5.Future<List<_i3.User>>);
  @override
  _i5.Future<_i3.User> insert(_i3.User? user) =>
      (super.noSuchMethod(Invocation.method(#insert, [user]),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i5.Future<_i3.User>);
  @override
  _i5.Future<_i3.User> update(_i3.User? user) =>
      (super.noSuchMethod(Invocation.method(#update, [user]),
              returnValue: Future<_i3.User>.value(_FakeUser_1()))
          as _i5.Future<_i3.User>);
}
